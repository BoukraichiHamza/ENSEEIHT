
(* Factorielle ascendante *)

module FactorielleAscendant

  use import int.Int
  use import int.Fact
  use import ref.Refint

  let factorielle (n: int) : int
    requires { 0 <= n }
    ensures  { result = (fact n) }
  =
    let i = ref 0 in
    let r = ref 1 in
    while  (!i < n) do
      invariant { !r = (fact !i) && (0 <= !i <= n) }
      variant   { n - !i }
      i := (!i) + 1;
      r := (!i) * (!r) 
    done;
    !r

end